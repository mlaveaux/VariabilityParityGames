
FEATURE overloaded
-- If the lift is overloaded, the doors don't close.

REQUIRE
   MODULE lift
   VAR door : {open,closed};
INTRODUCE
   MODULE lift
   VAR overload : boolean;
   ASSIGN next(overload) := case
                        door = closed : overload;
                        1             : {0,1};
                      esac;

   SPEC -- the lift will not move while overloaded
--  AG (floor = 3 & overload -> A[floor = 3 W (!overload)])
    AG (floor = 3 & overload -> !E[overload U !((floor = 3) | (!overload))])

   SPEC -- The doors may close when no overloading
      AG (door=open & !overload ->  E[!overload U door=closed])

   SPEC -- ... but it is impossible to close doors if overloaded
      !EF (overload & door=closed)

CHANGE
   MODULE lift
   IF overload
       THEN IMPOSE door := open;

END
-------
